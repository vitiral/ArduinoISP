#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part*
ArduinoISP v 2
\end_layout

\begin_layout Standard
Copyright (c) 2014 Garrett Berg, 
\begin_inset CommandInset href
LatexCommand href
name "garrett@cloudformdesign.com"
target "garrett@cloudformdesign.com"

\end_inset


\end_layout

\begin_layout Standard
Previous Copyright (c) 2008-2011 Randall Bohn as 
\begin_inset CommandInset href
LatexCommand href
name "http://arduino.cc/en/Tutorial/ArduinoISP"
target "ArduinoISP"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="20page%">
<column alignment="center" valignment="top" width="40page%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Documentation:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "http://cloudformdesign.com/products/arduinoispv2"
target "http://cloudformdesign.com/products/arduinoispv2"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Updated Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "https://github.com/cloudformdesign/ArduinoISP/releases"
target "https://github.com/cloudformdesign/ArduinoISP/releases"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BSD License
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "http://www.opensource.org/licenses/bsd-license.php"
target "http://www.opensource.org/licenses/bsd-license.php"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*
Summary
\end_layout

\begin_layout Standard
This sketch turns the Arduino into a AVRISP with the ability to communicate
 via SofwareSerial afterwards.
\end_layout

\begin_layout Standard
It is the same as the original ArduinoISP, but with the added Talk feature.
\end_layout

\begin_layout Section*
To use:
\end_layout

\begin_layout Itemize
Open and load ISP_talk onto your arduino, follow the directions 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "http://arduino.cc/en/Tutorial/ArduinoISP||http://arduino.cc/en/Tutorial/ArduinoISP"

\end_inset

.
 Your programming board should now be connected and programmed.
\end_layout

\begin_layout Itemize
To program your target device select the correct board and set the programmer
 to 
\shape italic
<Arduino as ISP>
\end_layout

\begin_layout Itemize
Press 
\shape italic
<Cntrl+Shift+U>
\shape default
 to upload your sketch (instead of just 
\shape italic
<Cntrl+U
\shape default
>)
\end_layout

\begin_layout Itemize
Follow directions below to take advantage of the talk feature.
\end_layout

\begin_layout Subsection*
New Talk Feature: 
\end_layout

\begin_layout Standard
After programming, the Arduino passes through all serial communication (except
 the note below)
\end_layout

\begin_layout Standard
For most arduino boards, configure the software port with:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SoftwareSerial SoftSerial(MOSI, MISO); // RX, TX
\end_layout

\begin_layout Plain Layout

SoftSerial.begin(19200); // ISP_talk communicates at 19200 baud
\end_layout

\end_inset


\end_layout

\begin_layout Standard
IMPORTANT: ISP mode is triggered when the following is received from the
 computer
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

:: 0x30, 0x20, (delay 250ms +/- 5ms), 0x30, 0x20, (delay 250ms +/- 5ms),
 0x30
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Where [0x30, 0x20] are consecutive bits (within 800us of each other)
\end_layout

\begin_layout Standard
Note that 0x30 == '0' and 0x20 == ' '
\end_layout

\begin_layout Standard
The targeted board can send any characters without triggering the ISP
\end_layout

\begin_layout Subsection*
Examples
\end_layout

\begin_layout Standard
Check out ISP_receiver for a simple example of how to use this library
\end_layout

\begin_layout Standard
(it simply returns everything it receives)
\end_layout

\end_body
\end_document
